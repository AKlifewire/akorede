type Device @aws_cognito_user_pools @aws_iam {
  id: ID!
  name: String!
  type: String!
  model: String
  manufacturer: String
  firmware: String
  ownerId: ID!
  location: String
  capabilities: [String]
  state: AWSJSON
  settings: AWSJSON
  createdAt: String
  updatedAt: String
}

type DeviceState @aws_cognito_user_pools @aws_iam {
  deviceId: ID!
  state: AWSJSON!
  timestamp: String!
  ttl: Int
}

type DeviceConnection @aws_cognito_user_pools @aws_iam {
  items: [Device]
  nextToken: String
}

type DeviceStateConnection @aws_cognito_user_pools @aws_iam {
  items: [DeviceState]
  nextToken: String
}

type UIDefinition @aws_cognito_user_pools @aws_iam {
  deviceInfo: AWSJSON
  sections: AWSJSON
  controls: AWSJSON
  state: AWSJSON
  metadata: AWSJSON
}

type CommandResponse @aws_cognito_user_pools @aws_iam {
  success: Boolean!
  message: String
  data: AWSJSON
}

input DeviceInput {
  name: String!
  type: String!
  model: String
  manufacturer: String
  firmware: String
  location: String
  capabilities: [String]
  settings: AWSJSON
}

input DeviceUpdateInput {
  name: String
  type: String
  model: String
  manufacturer: String
  firmware: String
  location: String
  capabilities: [String]
  settings: AWSJSON
}

type Query @aws_cognito_user_pools @aws_iam {
  getDevice(id: ID!): Device
  listDevices(limit: Int, nextToken: String): DeviceConnection
  getDevicesByOwner(ownerId: ID!, limit: Int, nextToken: String): DeviceConnection
  getDeviceState(deviceId: ID!): DeviceState
  getDeviceStateHistory(deviceId: ID!, startTime: String, endTime: String, limit: Int, nextToken: String): DeviceStateConnection
  getDeviceUI(deviceId: ID!, userId: ID!, pageName: String): UIDefinition
}

type Mutation @aws_cognito_user_pools @aws_iam {
  createDevice(input: DeviceInput!): Device
  updateDevice(id: ID!, input: DeviceUpdateInput!): Device
  deleteDevice(id: ID!): Device
  controlDevice(deviceId: ID!, command: String!, value: AWSJSON!): CommandResponse
  updateDeviceState(deviceId: ID!, state: AWSJSON!): DeviceState
}

type Subscription {
  onDeviceCreated(ownerId: ID!): Device
    @aws_subscribe(mutations: ["createDevice"])
  onDeviceUpdated(id: ID!): Device
    @aws_subscribe(mutations: ["updateDevice"])
  onDeviceDeleted(id: ID!): Device
    @aws_subscribe(mutations: ["deleteDevice"])
  onDeviceStateChanged(deviceId: ID!): DeviceState
    @aws_subscribe(mutations: ["updateDeviceState"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}